- name: backend configuration
  host: backend
  become: yes
  tasks:
    - name: disable current nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs:20
      ansible.builtin.service:
       name: nodejs:20
       state: started
       enabled: yes

    - name: Install nodejs:20
      ansible.builtin.package:
       name: nodejs:20
       state: present

    - name: add expense user
      ansible.builtin.user:
      name: expense

    - name: Create app directory 
      ansible.builtin.file:
       path: /app
       state: directory

    - name: Download the file
      ansible.builtin.get_url:
       url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
       dest: /tmp/backend.zip

    - name: unzip the file
      ansible.builtin.unarchive:
       src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
       dest: /app

    - name: Install npm
      ansible.builtin.package:
       name: npm
       state: present

     - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install python libs
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - cryptography
    - PyMySQL

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.daws82s.online
      target: /app/schema/backend.sql

  - name: daemon reload and restart service
    ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      daemon_reload: true
      name: backend